"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var ChecklistDirective = /** @class */ (function () {
    function ChecklistDirective() {
        this.maxSelectedItems = -1;
        this.checklistChange = new core_1.EventEmitter();
    }
    ////////////
    ChecklistDirective.prototype.ngOnChanges = function () {
        var checklist = this.checklist || [];
        this.isChecked = checklist.indexOf(this.checklistValue) >= 0;
    };
    ChecklistDirective.prototype.triggerOnChange = function ($event) {
        var target = $event.target;
        var updatedList;
        var checklist = this.checklist || [];
        if (target && target.checked) {
            if (this.maxSelectedItems === -1 || checklist.length < this.maxSelectedItems) {
                updatedList = checklist.concat([this.checklistValue]);
                this.checklistChange.emit(updatedList);
            }
            else {
                target.checked = false;
            }
        }
        else {
            var i = checklist.indexOf(this.checklistValue);
            updatedList = checklist.slice(0, i).concat(checklist.slice(i + 1));
            this.checklistChange.emit(updatedList);
        }
    };
    ChecklistDirective.decorators = [
        { type: core_1.Directive, args: [{
                    host: {
                        '(change)': 'triggerOnChange($event)',
                        '[checked]': 'isChecked',
                    },
                    selector: '[checklist]',
                },] },
    ];
    /** @nocollapse */
    ChecklistDirective.ctorParameters = function () { return []; };
    ChecklistDirective.propDecorators = {
        'checklist': [{ type: core_1.Input },],
        'checklistValue': [{ type: core_1.Input },],
        'maxSelectedItems': [{ type: core_1.Input },],
        'checklistChange': [{ type: core_1.Output },],
    };
    return ChecklistDirective;
}());
exports.ChecklistDirective = ChecklistDirective;
//# sourceMappingURL=checklist.directive.js.map